// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ardaos/loan/query.proto

package types

import (
	context "context"
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"

	query "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// QueryParamsRequest is request type for the Query/Params RPC method.
type QueryParamsRequest struct {
}

func (m *QueryParamsRequest) Reset()         { *m = QueryParamsRequest{} }
func (m *QueryParamsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryParamsRequest) ProtoMessage()    {}
func (*QueryParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{0}
}
func (m *QueryParamsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsRequest.Merge(m, src)
}
func (m *QueryParamsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsRequest proto.InternalMessageInfo

// QueryParamsResponse is response type for the Query/Params RPC method.
type QueryParamsResponse struct {
	// params holds all the parameters of this module.
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (m *QueryParamsResponse) Reset()         { *m = QueryParamsResponse{} }
func (m *QueryParamsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryParamsResponse) ProtoMessage()    {}
func (*QueryParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{1}
}
func (m *QueryParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsResponse.Merge(m, src)
}
func (m *QueryParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsResponse proto.InternalMessageInfo

func (m *QueryParamsResponse) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

type QueryGetLoanStateRequest struct {
	Index string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *QueryGetLoanStateRequest) Reset()         { *m = QueryGetLoanStateRequest{} }
func (m *QueryGetLoanStateRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetLoanStateRequest) ProtoMessage()    {}
func (*QueryGetLoanStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{2}
}
func (m *QueryGetLoanStateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetLoanStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetLoanStateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetLoanStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetLoanStateRequest.Merge(m, src)
}
func (m *QueryGetLoanStateRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetLoanStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetLoanStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetLoanStateRequest proto.InternalMessageInfo

func (m *QueryGetLoanStateRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type QueryGetLoanStateResponse struct {
	LoanState LoanState `protobuf:"bytes,1,opt,name=loanState,proto3" json:"loanState"`
}

func (m *QueryGetLoanStateResponse) Reset()         { *m = QueryGetLoanStateResponse{} }
func (m *QueryGetLoanStateResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetLoanStateResponse) ProtoMessage()    {}
func (*QueryGetLoanStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{3}
}
func (m *QueryGetLoanStateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetLoanStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetLoanStateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetLoanStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetLoanStateResponse.Merge(m, src)
}
func (m *QueryGetLoanStateResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetLoanStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetLoanStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetLoanStateResponse proto.InternalMessageInfo

func (m *QueryGetLoanStateResponse) GetLoanState() LoanState {
	if m != nil {
		return m.LoanState
	}
	return LoanState{}
}

type QueryAllLoanStateRequest struct {
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllLoanStateRequest) Reset()         { *m = QueryAllLoanStateRequest{} }
func (m *QueryAllLoanStateRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAllLoanStateRequest) ProtoMessage()    {}
func (*QueryAllLoanStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{4}
}
func (m *QueryAllLoanStateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllLoanStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllLoanStateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllLoanStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllLoanStateRequest.Merge(m, src)
}
func (m *QueryAllLoanStateRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllLoanStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllLoanStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllLoanStateRequest proto.InternalMessageInfo

func (m *QueryAllLoanStateRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryAllLoanStateResponse struct {
	LoanState  []LoanState         `protobuf:"bytes,1,rep,name=loanState,proto3" json:"loanState"`
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllLoanStateResponse) Reset()         { *m = QueryAllLoanStateResponse{} }
func (m *QueryAllLoanStateResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAllLoanStateResponse) ProtoMessage()    {}
func (*QueryAllLoanStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{5}
}
func (m *QueryAllLoanStateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllLoanStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllLoanStateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllLoanStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllLoanStateResponse.Merge(m, src)
}
func (m *QueryAllLoanStateResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllLoanStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllLoanStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllLoanStateResponse proto.InternalMessageInfo

func (m *QueryAllLoanStateResponse) GetLoanState() []LoanState {
	if m != nil {
		return m.LoanState
	}
	return nil
}

func (m *QueryAllLoanStateResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryGetCreditCardMetadataRequest struct {
	Index string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *QueryGetCreditCardMetadataRequest) Reset()         { *m = QueryGetCreditCardMetadataRequest{} }
func (m *QueryGetCreditCardMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetCreditCardMetadataRequest) ProtoMessage()    {}
func (*QueryGetCreditCardMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{6}
}
func (m *QueryGetCreditCardMetadataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetCreditCardMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetCreditCardMetadataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetCreditCardMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetCreditCardMetadataRequest.Merge(m, src)
}
func (m *QueryGetCreditCardMetadataRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetCreditCardMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetCreditCardMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetCreditCardMetadataRequest proto.InternalMessageInfo

func (m *QueryGetCreditCardMetadataRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type QueryGetCreditCardMetadataResponse struct {
	CreditCardMetadata CreditCardMetadata `protobuf:"bytes,1,opt,name=creditCardMetadata,proto3" json:"creditCardMetadata"`
}

func (m *QueryGetCreditCardMetadataResponse) Reset()         { *m = QueryGetCreditCardMetadataResponse{} }
func (m *QueryGetCreditCardMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetCreditCardMetadataResponse) ProtoMessage()    {}
func (*QueryGetCreditCardMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{7}
}
func (m *QueryGetCreditCardMetadataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetCreditCardMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetCreditCardMetadataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetCreditCardMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetCreditCardMetadataResponse.Merge(m, src)
}
func (m *QueryGetCreditCardMetadataResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetCreditCardMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetCreditCardMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetCreditCardMetadataResponse proto.InternalMessageInfo

func (m *QueryGetCreditCardMetadataResponse) GetCreditCardMetadata() CreditCardMetadata {
	if m != nil {
		return m.CreditCardMetadata
	}
	return CreditCardMetadata{}
}

type QueryAllCreditCardMetadataRequest struct {
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllCreditCardMetadataRequest) Reset()         { *m = QueryAllCreditCardMetadataRequest{} }
func (m *QueryAllCreditCardMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAllCreditCardMetadataRequest) ProtoMessage()    {}
func (*QueryAllCreditCardMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{8}
}
func (m *QueryAllCreditCardMetadataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllCreditCardMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllCreditCardMetadataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllCreditCardMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllCreditCardMetadataRequest.Merge(m, src)
}
func (m *QueryAllCreditCardMetadataRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllCreditCardMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllCreditCardMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllCreditCardMetadataRequest proto.InternalMessageInfo

func (m *QueryAllCreditCardMetadataRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryAllCreditCardMetadataResponse struct {
	CreditCardMetadata []CreditCardMetadata `protobuf:"bytes,1,rep,name=creditCardMetadata,proto3" json:"creditCardMetadata"`
	Pagination         *query.PageResponse  `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllCreditCardMetadataResponse) Reset()         { *m = QueryAllCreditCardMetadataResponse{} }
func (m *QueryAllCreditCardMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAllCreditCardMetadataResponse) ProtoMessage()    {}
func (*QueryAllCreditCardMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{9}
}
func (m *QueryAllCreditCardMetadataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllCreditCardMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllCreditCardMetadataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllCreditCardMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllCreditCardMetadataResponse.Merge(m, src)
}
func (m *QueryAllCreditCardMetadataResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllCreditCardMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllCreditCardMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllCreditCardMetadataResponse proto.InternalMessageInfo

func (m *QueryAllCreditCardMetadataResponse) GetCreditCardMetadata() []CreditCardMetadata {
	if m != nil {
		return m.CreditCardMetadata
	}
	return nil
}

func (m *QueryAllCreditCardMetadataResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryGetMcaMetadataRequest struct {
	Index string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *QueryGetMcaMetadataRequest) Reset()         { *m = QueryGetMcaMetadataRequest{} }
func (m *QueryGetMcaMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetMcaMetadataRequest) ProtoMessage()    {}
func (*QueryGetMcaMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{10}
}
func (m *QueryGetMcaMetadataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetMcaMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetMcaMetadataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetMcaMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetMcaMetadataRequest.Merge(m, src)
}
func (m *QueryGetMcaMetadataRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetMcaMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetMcaMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetMcaMetadataRequest proto.InternalMessageInfo

func (m *QueryGetMcaMetadataRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type QueryGetMcaMetadataResponse struct {
	McaMetadata McaMetadata `protobuf:"bytes,1,opt,name=mcaMetadata,proto3" json:"mcaMetadata"`
}

func (m *QueryGetMcaMetadataResponse) Reset()         { *m = QueryGetMcaMetadataResponse{} }
func (m *QueryGetMcaMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetMcaMetadataResponse) ProtoMessage()    {}
func (*QueryGetMcaMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{11}
}
func (m *QueryGetMcaMetadataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetMcaMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetMcaMetadataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetMcaMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetMcaMetadataResponse.Merge(m, src)
}
func (m *QueryGetMcaMetadataResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetMcaMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetMcaMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetMcaMetadataResponse proto.InternalMessageInfo

func (m *QueryGetMcaMetadataResponse) GetMcaMetadata() McaMetadata {
	if m != nil {
		return m.McaMetadata
	}
	return McaMetadata{}
}

type QueryAllMcaMetadataRequest struct {
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllMcaMetadataRequest) Reset()         { *m = QueryAllMcaMetadataRequest{} }
func (m *QueryAllMcaMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAllMcaMetadataRequest) ProtoMessage()    {}
func (*QueryAllMcaMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{12}
}
func (m *QueryAllMcaMetadataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllMcaMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllMcaMetadataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllMcaMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllMcaMetadataRequest.Merge(m, src)
}
func (m *QueryAllMcaMetadataRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllMcaMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllMcaMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllMcaMetadataRequest proto.InternalMessageInfo

func (m *QueryAllMcaMetadataRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryAllMcaMetadataResponse struct {
	McaMetadata []McaMetadata       `protobuf:"bytes,1,rep,name=mcaMetadata,proto3" json:"mcaMetadata"`
	Pagination  *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllMcaMetadataResponse) Reset()         { *m = QueryAllMcaMetadataResponse{} }
func (m *QueryAllMcaMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAllMcaMetadataResponse) ProtoMessage()    {}
func (*QueryAllMcaMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{13}
}
func (m *QueryAllMcaMetadataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllMcaMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllMcaMetadataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllMcaMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllMcaMetadataResponse.Merge(m, src)
}
func (m *QueryAllMcaMetadataResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllMcaMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllMcaMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllMcaMetadataResponse proto.InternalMessageInfo

func (m *QueryAllMcaMetadataResponse) GetMcaMetadata() []McaMetadata {
	if m != nil {
		return m.McaMetadata
	}
	return nil
}

func (m *QueryAllMcaMetadataResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryGetInstallmentMetadataRequest struct {
	Index string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *QueryGetInstallmentMetadataRequest) Reset()         { *m = QueryGetInstallmentMetadataRequest{} }
func (m *QueryGetInstallmentMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetInstallmentMetadataRequest) ProtoMessage()    {}
func (*QueryGetInstallmentMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{14}
}
func (m *QueryGetInstallmentMetadataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetInstallmentMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetInstallmentMetadataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetInstallmentMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetInstallmentMetadataRequest.Merge(m, src)
}
func (m *QueryGetInstallmentMetadataRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetInstallmentMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetInstallmentMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetInstallmentMetadataRequest proto.InternalMessageInfo

func (m *QueryGetInstallmentMetadataRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type QueryGetInstallmentMetadataResponse struct {
	InstallmentMetadata InstallmentMetadata `protobuf:"bytes,1,opt,name=installmentMetadata,proto3" json:"installmentMetadata"`
}

func (m *QueryGetInstallmentMetadataResponse) Reset()         { *m = QueryGetInstallmentMetadataResponse{} }
func (m *QueryGetInstallmentMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetInstallmentMetadataResponse) ProtoMessage()    {}
func (*QueryGetInstallmentMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{15}
}
func (m *QueryGetInstallmentMetadataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetInstallmentMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetInstallmentMetadataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetInstallmentMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetInstallmentMetadataResponse.Merge(m, src)
}
func (m *QueryGetInstallmentMetadataResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetInstallmentMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetInstallmentMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetInstallmentMetadataResponse proto.InternalMessageInfo

func (m *QueryGetInstallmentMetadataResponse) GetInstallmentMetadata() InstallmentMetadata {
	if m != nil {
		return m.InstallmentMetadata
	}
	return InstallmentMetadata{}
}

type QueryAllInstallmentMetadataRequest struct {
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllInstallmentMetadataRequest) Reset()         { *m = QueryAllInstallmentMetadataRequest{} }
func (m *QueryAllInstallmentMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAllInstallmentMetadataRequest) ProtoMessage()    {}
func (*QueryAllInstallmentMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{16}
}
func (m *QueryAllInstallmentMetadataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllInstallmentMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllInstallmentMetadataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllInstallmentMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllInstallmentMetadataRequest.Merge(m, src)
}
func (m *QueryAllInstallmentMetadataRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllInstallmentMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllInstallmentMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllInstallmentMetadataRequest proto.InternalMessageInfo

func (m *QueryAllInstallmentMetadataRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryAllInstallmentMetadataResponse struct {
	InstallmentMetadata []InstallmentMetadata `protobuf:"bytes,1,rep,name=installmentMetadata,proto3" json:"installmentMetadata"`
	Pagination          *query.PageResponse   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllInstallmentMetadataResponse) Reset()         { *m = QueryAllInstallmentMetadataResponse{} }
func (m *QueryAllInstallmentMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAllInstallmentMetadataResponse) ProtoMessage()    {}
func (*QueryAllInstallmentMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebe0ca6dcbd35c60, []int{17}
}
func (m *QueryAllInstallmentMetadataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllInstallmentMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllInstallmentMetadataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllInstallmentMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllInstallmentMetadataResponse.Merge(m, src)
}
func (m *QueryAllInstallmentMetadataResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllInstallmentMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllInstallmentMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllInstallmentMetadataResponse proto.InternalMessageInfo

func (m *QueryAllInstallmentMetadataResponse) GetInstallmentMetadata() []InstallmentMetadata {
	if m != nil {
		return m.InstallmentMetadata
	}
	return nil
}

func (m *QueryAllInstallmentMetadataResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryParamsRequest)(nil), "ardaos.loan.QueryParamsRequest")
	proto.RegisterType((*QueryParamsResponse)(nil), "ardaos.loan.QueryParamsResponse")
	proto.RegisterType((*QueryGetLoanStateRequest)(nil), "ardaos.loan.QueryGetLoanStateRequest")
	proto.RegisterType((*QueryGetLoanStateResponse)(nil), "ardaos.loan.QueryGetLoanStateResponse")
	proto.RegisterType((*QueryAllLoanStateRequest)(nil), "ardaos.loan.QueryAllLoanStateRequest")
	proto.RegisterType((*QueryAllLoanStateResponse)(nil), "ardaos.loan.QueryAllLoanStateResponse")
	proto.RegisterType((*QueryGetCreditCardMetadataRequest)(nil), "ardaos.loan.QueryGetCreditCardMetadataRequest")
	proto.RegisterType((*QueryGetCreditCardMetadataResponse)(nil), "ardaos.loan.QueryGetCreditCardMetadataResponse")
	proto.RegisterType((*QueryAllCreditCardMetadataRequest)(nil), "ardaos.loan.QueryAllCreditCardMetadataRequest")
	proto.RegisterType((*QueryAllCreditCardMetadataResponse)(nil), "ardaos.loan.QueryAllCreditCardMetadataResponse")
	proto.RegisterType((*QueryGetMcaMetadataRequest)(nil), "ardaos.loan.QueryGetMcaMetadataRequest")
	proto.RegisterType((*QueryGetMcaMetadataResponse)(nil), "ardaos.loan.QueryGetMcaMetadataResponse")
	proto.RegisterType((*QueryAllMcaMetadataRequest)(nil), "ardaos.loan.QueryAllMcaMetadataRequest")
	proto.RegisterType((*QueryAllMcaMetadataResponse)(nil), "ardaos.loan.QueryAllMcaMetadataResponse")
	proto.RegisterType((*QueryGetInstallmentMetadataRequest)(nil), "ardaos.loan.QueryGetInstallmentMetadataRequest")
	proto.RegisterType((*QueryGetInstallmentMetadataResponse)(nil), "ardaos.loan.QueryGetInstallmentMetadataResponse")
	proto.RegisterType((*QueryAllInstallmentMetadataRequest)(nil), "ardaos.loan.QueryAllInstallmentMetadataRequest")
	proto.RegisterType((*QueryAllInstallmentMetadataResponse)(nil), "ardaos.loan.QueryAllInstallmentMetadataResponse")
}

func init() { proto.RegisterFile("ardaos/loan/query.proto", fileDescriptor_ebe0ca6dcbd35c60) }

var fileDescriptor_ebe0ca6dcbd35c60 = []byte{
	// 881 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x97, 0x4f, 0x6b, 0x13, 0x4f,
	0x18, 0xc7, 0x33, 0xcd, 0xaf, 0x85, 0x4c, 0x7e, 0x08, 0x4e, 0x62, 0x8d, 0x6b, 0x48, 0xe3, 0xa8,
	0x6d, 0x09, 0xba, 0xdb, 0x46, 0x10, 0xec, 0xc9, 0xb4, 0x60, 0x11, 0x2c, 0xd4, 0x88, 0x28, 0x5e,
	0xc2, 0x24, 0x59, 0xc2, 0xe2, 0x66, 0x27, 0xcd, 0x6e, 0xa5, 0xa5, 0x48, 0x41, 0x04, 0x2f, 0x1e,
	0x04, 0xdf, 0x80, 0x07, 0xc1, 0x0a, 0x1e, 0x7c, 0x07, 0x5e, 0x3c, 0xf4, 0x58, 0xf0, 0xe2, 0x49,
	0xa4, 0x15, 0x7c, 0x1b, 0xb2, 0xb3, 0x4f, 0x92, 0xdd, 0xee, 0xec, 0x26, 0xa1, 0xb9, 0x94, 0x74,
	0x9f, 0x7f, 0x9f, 0xef, 0xf3, 0x4c, 0xe6, 0xd9, 0xe0, 0x8b, 0xac, 0xdb, 0x64, 0xdc, 0xd6, 0x4c,
	0xce, 0x2c, 0x6d, 0x6b, 0x5b, 0xef, 0xee, 0xaa, 0x9d, 0x2e, 0x77, 0x38, 0x49, 0x7b, 0x06, 0xd5,
	0x35, 0x28, 0xe7, 0x59, 0xdb, 0xb0, 0xb8, 0x26, 0xfe, 0x7a, 0x76, 0x25, 0xdb, 0xe2, 0x2d, 0x2e,
	0x3e, 0x6a, 0xee, 0x27, 0x78, 0x9a, 0x6f, 0x71, 0xde, 0x32, 0x75, 0x8d, 0x75, 0x0c, 0x8d, 0x59,
	0x16, 0x77, 0x98, 0x63, 0x70, 0xcb, 0x06, 0x6b, 0xa9, 0xc1, 0xed, 0x36, 0xb7, 0xb5, 0x3a, 0xb3,
	0x75, 0xaf, 0x98, 0xf6, 0x62, 0xb9, 0xae, 0x3b, 0x6c, 0x59, 0xeb, 0xb0, 0x96, 0x61, 0x09, 0x67,
	0xf0, 0xcd, 0xf9, 0xc1, 0x3a, 0xac, 0xcb, 0xda, 0xbd, 0x2c, 0x79, 0xbf, 0xc5, 0xfd, 0x53, 0xb3,
	0x1d, 0xe6, 0xe8, 0x60, 0x9d, 0xf7, 0x5b, 0x1b, 0x5d, 0xbd, 0x69, 0x38, 0xb5, 0x06, 0xeb, 0x36,
	0x6b, 0x6d, 0xdd, 0x61, 0x4d, 0xe6, 0x30, 0xf0, 0x2b, 0xf8, 0xfd, 0xda, 0x0d, 0x76, 0xda, 0x1e,
	0xc8, 0x63, 0x58, 0xb6, 0xc3, 0x4c, 0xb3, 0xad, 0x5b, 0xce, 0x29, 0x3f, 0x9a, 0xc5, 0xe4, 0xa1,
	0xab, 0x64, 0x53, 0x20, 0x56, 0xf5, 0xad, 0x6d, 0xdd, 0x76, 0xe8, 0x06, 0xce, 0x04, 0x9e, 0xda,
	0x1d, 0x6e, 0xd9, 0x3a, 0xb9, 0x8d, 0x67, 0x3c, 0x29, 0x39, 0x54, 0x44, 0x8b, 0xe9, 0x72, 0x46,
	0xf5, 0x75, 0x59, 0xf5, 0x9c, 0x57, 0x53, 0x87, 0xbf, 0xe6, 0x12, 0x07, 0x7f, 0xbf, 0x96, 0x50,
	0x15, 0xbc, 0xe9, 0x12, 0xce, 0x89, 0x74, 0xeb, 0xba, 0xf3, 0x80, 0x33, 0xeb, 0x91, 0xab, 0x17,
	0x4a, 0x91, 0x2c, 0x9e, 0x36, 0xac, 0xa6, 0xbe, 0x23, 0x52, 0xa6, 0xaa, 0xde, 0x3f, 0xf4, 0x09,
	0xbe, 0x24, 0x89, 0x00, 0x8c, 0x15, 0x9c, 0x32, 0x7b, 0x0f, 0x81, 0x64, 0x36, 0x40, 0xd2, 0x0f,
	0x59, 0xfd, 0xcf, 0x85, 0xa9, 0x0e, 0xdc, 0x69, 0x1d, 0x50, 0x2a, 0xa6, 0x19, 0x42, 0xb9, 0x87,
	0xf1, 0x60, 0x8e, 0x90, 0x78, 0x5e, 0xf5, 0x86, 0xae, 0xba, 0x43, 0x57, 0xbd, 0x13, 0x06, 0x43,
	0x57, 0x37, 0x59, 0xab, 0x17, 0x5b, 0xf5, 0x45, 0xd2, 0x0f, 0x08, 0xe8, 0x83, 0x45, 0xe4, 0xf4,
	0xc9, 0x31, 0xe8, 0xc9, 0x7a, 0x80, 0x70, 0x4a, 0x10, 0x2e, 0x0c, 0x25, 0xf4, 0x0a, 0x07, 0x10,
	0xef, 0xe0, 0x2b, 0xbd, 0xfe, 0xae, 0x89, 0x43, 0xb6, 0xc6, 0xba, 0xcd, 0x0d, 0x38, 0x1a, 0xf1,
	0xa3, 0xd9, 0xc3, 0x34, 0x2e, 0x14, 0x54, 0x3e, 0xc6, 0xa4, 0x11, 0xb2, 0x42, 0x4f, 0xe7, 0x02,
	0x72, 0xc3, 0x49, 0x40, 0xb7, 0x24, 0x01, 0x7d, 0x0e, 0xdc, 0x15, 0xd3, 0x8c, 0xe6, 0x9e, 0xd4,
	0x1c, 0xbf, 0x23, 0x90, 0x1a, 0x51, 0x6d, 0x88, 0xd4, 0xe4, 0x99, 0xa4, 0x4e, 0x6e, 0xd6, 0x65,
	0xac, 0xf4, 0x06, 0xb6, 0xd1, 0x60, 0xa3, 0x0d, 0xb9, 0x86, 0x2f, 0x4b, 0x63, 0x40, 0xf2, 0x5d,
	0x9c, 0x6e, 0x0f, 0x1e, 0x43, 0x8b, 0x73, 0x01, 0xad, 0xbe, 0x30, 0x10, 0xe9, 0x0f, 0xa1, 0x4d,
	0x80, 0xaa, 0x98, 0xa6, 0x04, 0x6a, 0x52, 0x13, 0x3c, 0x40, 0xa0, 0xe3, 0x74, 0x99, 0x28, 0x1d,
	0xc9, 0x31, 0x75, 0x4c, 0x6e, 0x4a, 0x2b, 0x83, 0xaf, 0xd5, 0xfd, 0xc1, 0x75, 0x3d, 0xda, 0xb4,
	0xf6, 0xf1, 0xd5, 0xd8, 0x58, 0x50, 0xfb, 0x14, 0x67, 0x8c, 0xb0, 0x19, 0xda, 0x5b, 0x0c, 0xa8,
	0x96, 0xa4, 0x01, 0xf5, 0xb2, 0x14, 0xd4, 0x1c, 0x7c, 0x51, 0x62, 0xe0, 0x27, 0x35, 0xd5, 0x43,
	0x04, 0x7a, 0xa3, 0xca, 0x0d, 0xd3, 0x9b, 0x3c, 0xa3, 0xde, 0x89, 0x4d, 0xbd, 0xfc, 0x0d, 0xe3,
	0x69, 0x21, 0x85, 0x18, 0x78, 0xc6, 0x5b, 0xa0, 0x24, 0x78, 0x67, 0x84, 0xb7, 0xb3, 0x52, 0x8c,
	0x76, 0xf0, 0x4a, 0xd0, 0xfc, 0xab, 0x1f, 0x7f, 0xde, 0x4f, 0xcd, 0x92, 0xac, 0xe6, 0x7a, 0xde,
	0x0c, 0xbe, 0x87, 0x90, 0xd7, 0x08, 0xa7, 0xfa, 0x4b, 0x86, 0x5c, 0x0f, 0x67, 0x93, 0xec, 0x69,
	0x65, 0x7e, 0x98, 0x1b, 0x94, 0x5e, 0x14, 0xa5, 0x29, 0x29, 0x06, 0x4b, 0x0f, 0x5e, 0x74, 0xb4,
	0x3d, 0x71, 0x68, 0x5f, 0x92, 0x7d, 0xfc, 0x7f, 0x3f, 0xbc, 0x62, 0x9a, 0x32, 0x10, 0xc9, 0x96,
	0x96, 0x81, 0xc8, 0xf6, 0x2c, 0x2d, 0x0a, 0x10, 0x85, 0xe4, 0xa2, 0x40, 0xc8, 0x67, 0x84, 0x49,
	0xf8, 0x4a, 0x26, 0xaa, 0x54, 0x69, 0xe4, 0xba, 0x51, 0xb4, 0x91, 0xfd, 0x81, 0xac, 0x2c, 0xc8,
	0x6e, 0x90, 0x52, 0x90, 0x4c, 0xf6, 0xb6, 0xd7, 0x6f, 0xd6, 0x47, 0x84, 0x2f, 0x84, 0x53, 0xba,
	0x6d, 0x53, 0xa5, 0xfd, 0x18, 0x0b, 0x37, 0x76, 0xbf, 0xd1, 0x92, 0xc0, 0xbd, 0x46, 0xe8, 0x70,
	0x5c, 0xf2, 0x16, 0xe1, 0xb4, 0xef, 0xc6, 0x24, 0x0b, 0xd2, 0xde, 0x84, 0x6f, 0x7c, 0x65, 0x71,
	0xb8, 0x63, 0x3c, 0x8e, 0xff, 0x1d, 0xb8, 0xdf, 0xb5, 0x37, 0x08, 0x9f, 0xf3, 0xe5, 0x70, 0xdb,
	0xb5, 0x20, 0x95, 0x3f, 0x1a, 0x91, 0x7c, 0x8b, 0x50, 0x2a, 0x88, 0xf2, 0x44, 0x89, 0x26, 0x22,
	0x5f, 0x10, 0xce, 0x48, 0x2e, 0x19, 0x22, 0x3f, 0x3c, 0xd1, 0x97, 0xa8, 0xb2, 0x34, 0x7a, 0x40,
	0xfc, 0x71, 0x93, 0xfd, 0x28, 0xe8, 0x37, 0xee, 0x13, 0xc2, 0xb3, 0x92, 0x9c, 0x6e, 0x03, 0xe5,
	0xe7, 0x67, 0x3c, 0xe2, 0xf8, 0x8b, 0x3b, 0x6a, 0xc4, 0x32, 0xe2, 0x55, 0xf5, 0xf0, 0xb8, 0x80,
	0x8e, 0x8e, 0x0b, 0xe8, 0xf7, 0x71, 0x01, 0xbd, 0x3b, 0x29, 0x24, 0x8e, 0x4e, 0x0a, 0x89, 0x9f,
	0x27, 0x85, 0xc4, 0xb3, 0x6c, 0x2f, 0x78, 0xc7, 0x0b, 0x77, 0x76, 0x3b, 0xba, 0x5d, 0x9f, 0x11,
	0xbf, 0x7b, 0x6e, 0xfd, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xd7, 0xb3, 0x6f, 0x53, 0x3a, 0x0e, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// Parameters queries the parameters of the module.
	Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error)
	// Queries a list of LoanState items.
	LoanState(ctx context.Context, in *QueryGetLoanStateRequest, opts ...grpc.CallOption) (*QueryGetLoanStateResponse, error)
	LoanStateAll(ctx context.Context, in *QueryAllLoanStateRequest, opts ...grpc.CallOption) (*QueryAllLoanStateResponse, error)
	// Queries a list of CreditCardMetadata items.
	CreditCardMetadata(ctx context.Context, in *QueryGetCreditCardMetadataRequest, opts ...grpc.CallOption) (*QueryGetCreditCardMetadataResponse, error)
	CreditCardMetadataAll(ctx context.Context, in *QueryAllCreditCardMetadataRequest, opts ...grpc.CallOption) (*QueryAllCreditCardMetadataResponse, error)
	// Queries a list of McaMetadata items.
	McaMetadata(ctx context.Context, in *QueryGetMcaMetadataRequest, opts ...grpc.CallOption) (*QueryGetMcaMetadataResponse, error)
	McaMetadataAll(ctx context.Context, in *QueryAllMcaMetadataRequest, opts ...grpc.CallOption) (*QueryAllMcaMetadataResponse, error)
	// Queries a list of InstallmentMetadata items.
	InstallmentMetadata(ctx context.Context, in *QueryGetInstallmentMetadataRequest, opts ...grpc.CallOption) (*QueryGetInstallmentMetadataResponse, error)
	InstallmentMetadataAll(ctx context.Context, in *QueryAllInstallmentMetadataRequest, opts ...grpc.CallOption) (*QueryAllInstallmentMetadataResponse, error)
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error) {
	out := new(QueryParamsResponse)
	err := c.cc.Invoke(ctx, "/ardaos.loan.Query/Params", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) LoanState(ctx context.Context, in *QueryGetLoanStateRequest, opts ...grpc.CallOption) (*QueryGetLoanStateResponse, error) {
	out := new(QueryGetLoanStateResponse)
	err := c.cc.Invoke(ctx, "/ardaos.loan.Query/LoanState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) LoanStateAll(ctx context.Context, in *QueryAllLoanStateRequest, opts ...grpc.CallOption) (*QueryAllLoanStateResponse, error) {
	out := new(QueryAllLoanStateResponse)
	err := c.cc.Invoke(ctx, "/ardaos.loan.Query/LoanStateAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) CreditCardMetadata(ctx context.Context, in *QueryGetCreditCardMetadataRequest, opts ...grpc.CallOption) (*QueryGetCreditCardMetadataResponse, error) {
	out := new(QueryGetCreditCardMetadataResponse)
	err := c.cc.Invoke(ctx, "/ardaos.loan.Query/CreditCardMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) CreditCardMetadataAll(ctx context.Context, in *QueryAllCreditCardMetadataRequest, opts ...grpc.CallOption) (*QueryAllCreditCardMetadataResponse, error) {
	out := new(QueryAllCreditCardMetadataResponse)
	err := c.cc.Invoke(ctx, "/ardaos.loan.Query/CreditCardMetadataAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) McaMetadata(ctx context.Context, in *QueryGetMcaMetadataRequest, opts ...grpc.CallOption) (*QueryGetMcaMetadataResponse, error) {
	out := new(QueryGetMcaMetadataResponse)
	err := c.cc.Invoke(ctx, "/ardaos.loan.Query/McaMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) McaMetadataAll(ctx context.Context, in *QueryAllMcaMetadataRequest, opts ...grpc.CallOption) (*QueryAllMcaMetadataResponse, error) {
	out := new(QueryAllMcaMetadataResponse)
	err := c.cc.Invoke(ctx, "/ardaos.loan.Query/McaMetadataAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) InstallmentMetadata(ctx context.Context, in *QueryGetInstallmentMetadataRequest, opts ...grpc.CallOption) (*QueryGetInstallmentMetadataResponse, error) {
	out := new(QueryGetInstallmentMetadataResponse)
	err := c.cc.Invoke(ctx, "/ardaos.loan.Query/InstallmentMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) InstallmentMetadataAll(ctx context.Context, in *QueryAllInstallmentMetadataRequest, opts ...grpc.CallOption) (*QueryAllInstallmentMetadataResponse, error) {
	out := new(QueryAllInstallmentMetadataResponse)
	err := c.cc.Invoke(ctx, "/ardaos.loan.Query/InstallmentMetadataAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// Parameters queries the parameters of the module.
	Params(context.Context, *QueryParamsRequest) (*QueryParamsResponse, error)
	// Queries a list of LoanState items.
	LoanState(context.Context, *QueryGetLoanStateRequest) (*QueryGetLoanStateResponse, error)
	LoanStateAll(context.Context, *QueryAllLoanStateRequest) (*QueryAllLoanStateResponse, error)
	// Queries a list of CreditCardMetadata items.
	CreditCardMetadata(context.Context, *QueryGetCreditCardMetadataRequest) (*QueryGetCreditCardMetadataResponse, error)
	CreditCardMetadataAll(context.Context, *QueryAllCreditCardMetadataRequest) (*QueryAllCreditCardMetadataResponse, error)
	// Queries a list of McaMetadata items.
	McaMetadata(context.Context, *QueryGetMcaMetadataRequest) (*QueryGetMcaMetadataResponse, error)
	McaMetadataAll(context.Context, *QueryAllMcaMetadataRequest) (*QueryAllMcaMetadataResponse, error)
	// Queries a list of InstallmentMetadata items.
	InstallmentMetadata(context.Context, *QueryGetInstallmentMetadataRequest) (*QueryGetInstallmentMetadataResponse, error)
	InstallmentMetadataAll(context.Context, *QueryAllInstallmentMetadataRequest) (*QueryAllInstallmentMetadataResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) Params(ctx context.Context, req *QueryParamsRequest) (*QueryParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Params not implemented")
}
func (*UnimplementedQueryServer) LoanState(ctx context.Context, req *QueryGetLoanStateRequest) (*QueryGetLoanStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoanState not implemented")
}
func (*UnimplementedQueryServer) LoanStateAll(ctx context.Context, req *QueryAllLoanStateRequest) (*QueryAllLoanStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoanStateAll not implemented")
}
func (*UnimplementedQueryServer) CreditCardMetadata(ctx context.Context, req *QueryGetCreditCardMetadataRequest) (*QueryGetCreditCardMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreditCardMetadata not implemented")
}
func (*UnimplementedQueryServer) CreditCardMetadataAll(ctx context.Context, req *QueryAllCreditCardMetadataRequest) (*QueryAllCreditCardMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreditCardMetadataAll not implemented")
}
func (*UnimplementedQueryServer) McaMetadata(ctx context.Context, req *QueryGetMcaMetadataRequest) (*QueryGetMcaMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method McaMetadata not implemented")
}
func (*UnimplementedQueryServer) McaMetadataAll(ctx context.Context, req *QueryAllMcaMetadataRequest) (*QueryAllMcaMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method McaMetadataAll not implemented")
}
func (*UnimplementedQueryServer) InstallmentMetadata(ctx context.Context, req *QueryGetInstallmentMetadataRequest) (*QueryGetInstallmentMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InstallmentMetadata not implemented")
}
func (*UnimplementedQueryServer) InstallmentMetadataAll(ctx context.Context, req *QueryAllInstallmentMetadataRequest) (*QueryAllInstallmentMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InstallmentMetadataAll not implemented")
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_Params_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Params(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ardaos.loan.Query/Params",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Params(ctx, req.(*QueryParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_LoanState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetLoanStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).LoanState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ardaos.loan.Query/LoanState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).LoanState(ctx, req.(*QueryGetLoanStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_LoanStateAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllLoanStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).LoanStateAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ardaos.loan.Query/LoanStateAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).LoanStateAll(ctx, req.(*QueryAllLoanStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_CreditCardMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetCreditCardMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).CreditCardMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ardaos.loan.Query/CreditCardMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).CreditCardMetadata(ctx, req.(*QueryGetCreditCardMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_CreditCardMetadataAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllCreditCardMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).CreditCardMetadataAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ardaos.loan.Query/CreditCardMetadataAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).CreditCardMetadataAll(ctx, req.(*QueryAllCreditCardMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_McaMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetMcaMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).McaMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ardaos.loan.Query/McaMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).McaMetadata(ctx, req.(*QueryGetMcaMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_McaMetadataAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllMcaMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).McaMetadataAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ardaos.loan.Query/McaMetadataAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).McaMetadataAll(ctx, req.(*QueryAllMcaMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_InstallmentMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetInstallmentMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).InstallmentMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ardaos.loan.Query/InstallmentMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).InstallmentMetadata(ctx, req.(*QueryGetInstallmentMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_InstallmentMetadataAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllInstallmentMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).InstallmentMetadataAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ardaos.loan.Query/InstallmentMetadataAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).InstallmentMetadataAll(ctx, req.(*QueryAllInstallmentMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var Query_serviceDesc = _Query_serviceDesc
var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ardaos.loan.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Params",
			Handler:    _Query_Params_Handler,
		},
		{
			MethodName: "LoanState",
			Handler:    _Query_LoanState_Handler,
		},
		{
			MethodName: "LoanStateAll",
			Handler:    _Query_LoanStateAll_Handler,
		},
		{
			MethodName: "CreditCardMetadata",
			Handler:    _Query_CreditCardMetadata_Handler,
		},
		{
			MethodName: "CreditCardMetadataAll",
			Handler:    _Query_CreditCardMetadataAll_Handler,
		},
		{
			MethodName: "McaMetadata",
			Handler:    _Query_McaMetadata_Handler,
		},
		{
			MethodName: "McaMetadataAll",
			Handler:    _Query_McaMetadataAll_Handler,
		},
		{
			MethodName: "InstallmentMetadata",
			Handler:    _Query_InstallmentMetadata_Handler,
		},
		{
			MethodName: "InstallmentMetadataAll",
			Handler:    _Query_InstallmentMetadataAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ardaos/loan/query.proto",
}

func (m *QueryParamsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryGetLoanStateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetLoanStateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetLoanStateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetLoanStateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetLoanStateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetLoanStateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.LoanState.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryAllLoanStateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllLoanStateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllLoanStateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllLoanStateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllLoanStateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllLoanStateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.LoanState) > 0 {
		for iNdEx := len(m.LoanState) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LoanState[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetCreditCardMetadataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetCreditCardMetadataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetCreditCardMetadataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetCreditCardMetadataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetCreditCardMetadataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetCreditCardMetadataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.CreditCardMetadata.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryAllCreditCardMetadataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllCreditCardMetadataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllCreditCardMetadataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllCreditCardMetadataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllCreditCardMetadataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllCreditCardMetadataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.CreditCardMetadata) > 0 {
		for iNdEx := len(m.CreditCardMetadata) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.CreditCardMetadata[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetMcaMetadataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetMcaMetadataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetMcaMetadataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetMcaMetadataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetMcaMetadataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetMcaMetadataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.McaMetadata.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryAllMcaMetadataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllMcaMetadataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllMcaMetadataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllMcaMetadataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllMcaMetadataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllMcaMetadataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.McaMetadata) > 0 {
		for iNdEx := len(m.McaMetadata) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.McaMetadata[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetInstallmentMetadataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetInstallmentMetadataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetInstallmentMetadataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetInstallmentMetadataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetInstallmentMetadataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetInstallmentMetadataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.InstallmentMetadata.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryAllInstallmentMetadataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllInstallmentMetadataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllInstallmentMetadataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllInstallmentMetadataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllInstallmentMetadataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllInstallmentMetadataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.InstallmentMetadata) > 0 {
		for iNdEx := len(m.InstallmentMetadata) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InstallmentMetadata[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryParamsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryGetLoanStateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetLoanStateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.LoanState.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryAllLoanStateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllLoanStateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.LoanState) > 0 {
		for _, e := range m.LoanState {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetCreditCardMetadataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetCreditCardMetadataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.CreditCardMetadata.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryAllCreditCardMetadataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllCreditCardMetadataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CreditCardMetadata) > 0 {
		for _, e := range m.CreditCardMetadata {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetMcaMetadataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetMcaMetadataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.McaMetadata.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryAllMcaMetadataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllMcaMetadataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.McaMetadata) > 0 {
		for _, e := range m.McaMetadata {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetInstallmentMetadataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetInstallmentMetadataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.InstallmentMetadata.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryAllInstallmentMetadataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllInstallmentMetadataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.InstallmentMetadata) > 0 {
		for _, e := range m.InstallmentMetadata {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryParamsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetLoanStateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetLoanStateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetLoanStateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetLoanStateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetLoanStateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetLoanStateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoanState", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LoanState.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllLoanStateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllLoanStateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllLoanStateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllLoanStateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllLoanStateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllLoanStateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoanState", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoanState = append(m.LoanState, LoanState{})
			if err := m.LoanState[len(m.LoanState)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetCreditCardMetadataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetCreditCardMetadataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetCreditCardMetadataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetCreditCardMetadataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetCreditCardMetadataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetCreditCardMetadataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreditCardMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CreditCardMetadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllCreditCardMetadataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllCreditCardMetadataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllCreditCardMetadataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllCreditCardMetadataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllCreditCardMetadataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllCreditCardMetadataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreditCardMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreditCardMetadata = append(m.CreditCardMetadata, CreditCardMetadata{})
			if err := m.CreditCardMetadata[len(m.CreditCardMetadata)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetMcaMetadataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetMcaMetadataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetMcaMetadataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetMcaMetadataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetMcaMetadataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetMcaMetadataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field McaMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.McaMetadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllMcaMetadataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllMcaMetadataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllMcaMetadataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllMcaMetadataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllMcaMetadataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllMcaMetadataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field McaMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.McaMetadata = append(m.McaMetadata, McaMetadata{})
			if err := m.McaMetadata[len(m.McaMetadata)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetInstallmentMetadataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetInstallmentMetadataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetInstallmentMetadataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetInstallmentMetadataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetInstallmentMetadataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetInstallmentMetadataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstallmentMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.InstallmentMetadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllInstallmentMetadataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllInstallmentMetadataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllInstallmentMetadataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllInstallmentMetadataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllInstallmentMetadataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllInstallmentMetadataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstallmentMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstallmentMetadata = append(m.InstallmentMetadata, InstallmentMetadata{})
			if err := m.InstallmentMetadata[len(m.InstallmentMetadata)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
