// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: ardaos/loan/tx.proto

package loan

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Msg_UpdateParams_FullMethodName              = "/ardaos.loan.Msg/UpdateParams"
	Msg_CreateLoan_FullMethodName                = "/ardaos.loan.Msg/CreateLoan"
	Msg_CreateLoanState_FullMethodName           = "/ardaos.loan.Msg/CreateLoanState"
	Msg_UpdateLoanState_FullMethodName           = "/ardaos.loan.Msg/UpdateLoanState"
	Msg_DeleteLoanState_FullMethodName           = "/ardaos.loan.Msg/DeleteLoanState"
	Msg_CreateCreditCardMetadata_FullMethodName  = "/ardaos.loan.Msg/CreateCreditCardMetadata"
	Msg_UpdateCreditCardMetadata_FullMethodName  = "/ardaos.loan.Msg/UpdateCreditCardMetadata"
	Msg_DeleteCreditCardMetadata_FullMethodName  = "/ardaos.loan.Msg/DeleteCreditCardMetadata"
	Msg_CreateMcaMetadata_FullMethodName         = "/ardaos.loan.Msg/CreateMcaMetadata"
	Msg_UpdateMcaMetadata_FullMethodName         = "/ardaos.loan.Msg/UpdateMcaMetadata"
	Msg_DeleteMcaMetadata_FullMethodName         = "/ardaos.loan.Msg/DeleteMcaMetadata"
	Msg_CreateInstallmentMetadata_FullMethodName = "/ardaos.loan.Msg/CreateInstallmentMetadata"
	Msg_UpdateInstallmentMetadata_FullMethodName = "/ardaos.loan.Msg/UpdateInstallmentMetadata"
	Msg_DeleteInstallmentMetadata_FullMethodName = "/ardaos.loan.Msg/DeleteInstallmentMetadata"
)

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	CreateLoan(ctx context.Context, in *MsgCreateLoan, opts ...grpc.CallOption) (*MsgCreateLoanResponse, error)
	CreateLoanState(ctx context.Context, in *MsgCreateLoanState, opts ...grpc.CallOption) (*MsgCreateLoanStateResponse, error)
	UpdateLoanState(ctx context.Context, in *MsgUpdateLoanState, opts ...grpc.CallOption) (*MsgUpdateLoanStateResponse, error)
	DeleteLoanState(ctx context.Context, in *MsgDeleteLoanState, opts ...grpc.CallOption) (*MsgDeleteLoanStateResponse, error)
	CreateCreditCardMetadata(ctx context.Context, in *MsgCreateCreditCardMetadata, opts ...grpc.CallOption) (*MsgCreateCreditCardMetadataResponse, error)
	UpdateCreditCardMetadata(ctx context.Context, in *MsgUpdateCreditCardMetadata, opts ...grpc.CallOption) (*MsgUpdateCreditCardMetadataResponse, error)
	DeleteCreditCardMetadata(ctx context.Context, in *MsgDeleteCreditCardMetadata, opts ...grpc.CallOption) (*MsgDeleteCreditCardMetadataResponse, error)
	CreateMcaMetadata(ctx context.Context, in *MsgCreateMcaMetadata, opts ...grpc.CallOption) (*MsgCreateMcaMetadataResponse, error)
	UpdateMcaMetadata(ctx context.Context, in *MsgUpdateMcaMetadata, opts ...grpc.CallOption) (*MsgUpdateMcaMetadataResponse, error)
	DeleteMcaMetadata(ctx context.Context, in *MsgDeleteMcaMetadata, opts ...grpc.CallOption) (*MsgDeleteMcaMetadataResponse, error)
	CreateInstallmentMetadata(ctx context.Context, in *MsgCreateInstallmentMetadata, opts ...grpc.CallOption) (*MsgCreateInstallmentMetadataResponse, error)
	UpdateInstallmentMetadata(ctx context.Context, in *MsgUpdateInstallmentMetadata, opts ...grpc.CallOption) (*MsgUpdateInstallmentMetadataResponse, error)
	DeleteInstallmentMetadata(ctx context.Context, in *MsgDeleteInstallmentMetadata, opts ...grpc.CallOption) (*MsgDeleteInstallmentMetadataResponse, error)
}

type msgClient struct {
	cc grpc.ClientConnInterface
}

func NewMsgClient(cc grpc.ClientConnInterface) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, Msg_UpdateParams_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateLoan(ctx context.Context, in *MsgCreateLoan, opts ...grpc.CallOption) (*MsgCreateLoanResponse, error) {
	out := new(MsgCreateLoanResponse)
	err := c.cc.Invoke(ctx, Msg_CreateLoan_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateLoanState(ctx context.Context, in *MsgCreateLoanState, opts ...grpc.CallOption) (*MsgCreateLoanStateResponse, error) {
	out := new(MsgCreateLoanStateResponse)
	err := c.cc.Invoke(ctx, Msg_CreateLoanState_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateLoanState(ctx context.Context, in *MsgUpdateLoanState, opts ...grpc.CallOption) (*MsgUpdateLoanStateResponse, error) {
	out := new(MsgUpdateLoanStateResponse)
	err := c.cc.Invoke(ctx, Msg_UpdateLoanState_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteLoanState(ctx context.Context, in *MsgDeleteLoanState, opts ...grpc.CallOption) (*MsgDeleteLoanStateResponse, error) {
	out := new(MsgDeleteLoanStateResponse)
	err := c.cc.Invoke(ctx, Msg_DeleteLoanState_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateCreditCardMetadata(ctx context.Context, in *MsgCreateCreditCardMetadata, opts ...grpc.CallOption) (*MsgCreateCreditCardMetadataResponse, error) {
	out := new(MsgCreateCreditCardMetadataResponse)
	err := c.cc.Invoke(ctx, Msg_CreateCreditCardMetadata_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateCreditCardMetadata(ctx context.Context, in *MsgUpdateCreditCardMetadata, opts ...grpc.CallOption) (*MsgUpdateCreditCardMetadataResponse, error) {
	out := new(MsgUpdateCreditCardMetadataResponse)
	err := c.cc.Invoke(ctx, Msg_UpdateCreditCardMetadata_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteCreditCardMetadata(ctx context.Context, in *MsgDeleteCreditCardMetadata, opts ...grpc.CallOption) (*MsgDeleteCreditCardMetadataResponse, error) {
	out := new(MsgDeleteCreditCardMetadataResponse)
	err := c.cc.Invoke(ctx, Msg_DeleteCreditCardMetadata_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateMcaMetadata(ctx context.Context, in *MsgCreateMcaMetadata, opts ...grpc.CallOption) (*MsgCreateMcaMetadataResponse, error) {
	out := new(MsgCreateMcaMetadataResponse)
	err := c.cc.Invoke(ctx, Msg_CreateMcaMetadata_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateMcaMetadata(ctx context.Context, in *MsgUpdateMcaMetadata, opts ...grpc.CallOption) (*MsgUpdateMcaMetadataResponse, error) {
	out := new(MsgUpdateMcaMetadataResponse)
	err := c.cc.Invoke(ctx, Msg_UpdateMcaMetadata_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteMcaMetadata(ctx context.Context, in *MsgDeleteMcaMetadata, opts ...grpc.CallOption) (*MsgDeleteMcaMetadataResponse, error) {
	out := new(MsgDeleteMcaMetadataResponse)
	err := c.cc.Invoke(ctx, Msg_DeleteMcaMetadata_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateInstallmentMetadata(ctx context.Context, in *MsgCreateInstallmentMetadata, opts ...grpc.CallOption) (*MsgCreateInstallmentMetadataResponse, error) {
	out := new(MsgCreateInstallmentMetadataResponse)
	err := c.cc.Invoke(ctx, Msg_CreateInstallmentMetadata_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateInstallmentMetadata(ctx context.Context, in *MsgUpdateInstallmentMetadata, opts ...grpc.CallOption) (*MsgUpdateInstallmentMetadataResponse, error) {
	out := new(MsgUpdateInstallmentMetadataResponse)
	err := c.cc.Invoke(ctx, Msg_UpdateInstallmentMetadata_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteInstallmentMetadata(ctx context.Context, in *MsgDeleteInstallmentMetadata, opts ...grpc.CallOption) (*MsgDeleteInstallmentMetadataResponse, error) {
	out := new(MsgDeleteInstallmentMetadataResponse)
	err := c.cc.Invoke(ctx, Msg_DeleteInstallmentMetadata_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
// All implementations must embed UnimplementedMsgServer
// for forward compatibility
type MsgServer interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	CreateLoan(context.Context, *MsgCreateLoan) (*MsgCreateLoanResponse, error)
	CreateLoanState(context.Context, *MsgCreateLoanState) (*MsgCreateLoanStateResponse, error)
	UpdateLoanState(context.Context, *MsgUpdateLoanState) (*MsgUpdateLoanStateResponse, error)
	DeleteLoanState(context.Context, *MsgDeleteLoanState) (*MsgDeleteLoanStateResponse, error)
	CreateCreditCardMetadata(context.Context, *MsgCreateCreditCardMetadata) (*MsgCreateCreditCardMetadataResponse, error)
	UpdateCreditCardMetadata(context.Context, *MsgUpdateCreditCardMetadata) (*MsgUpdateCreditCardMetadataResponse, error)
	DeleteCreditCardMetadata(context.Context, *MsgDeleteCreditCardMetadata) (*MsgDeleteCreditCardMetadataResponse, error)
	CreateMcaMetadata(context.Context, *MsgCreateMcaMetadata) (*MsgCreateMcaMetadataResponse, error)
	UpdateMcaMetadata(context.Context, *MsgUpdateMcaMetadata) (*MsgUpdateMcaMetadataResponse, error)
	DeleteMcaMetadata(context.Context, *MsgDeleteMcaMetadata) (*MsgDeleteMcaMetadataResponse, error)
	CreateInstallmentMetadata(context.Context, *MsgCreateInstallmentMetadata) (*MsgCreateInstallmentMetadataResponse, error)
	UpdateInstallmentMetadata(context.Context, *MsgUpdateInstallmentMetadata) (*MsgUpdateInstallmentMetadataResponse, error)
	DeleteInstallmentMetadata(context.Context, *MsgDeleteInstallmentMetadata) (*MsgDeleteInstallmentMetadataResponse, error)
	mustEmbedUnimplementedMsgServer()
}

// UnimplementedMsgServer must be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (UnimplementedMsgServer) UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (UnimplementedMsgServer) CreateLoan(context.Context, *MsgCreateLoan) (*MsgCreateLoanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLoan not implemented")
}
func (UnimplementedMsgServer) CreateLoanState(context.Context, *MsgCreateLoanState) (*MsgCreateLoanStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLoanState not implemented")
}
func (UnimplementedMsgServer) UpdateLoanState(context.Context, *MsgUpdateLoanState) (*MsgUpdateLoanStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLoanState not implemented")
}
func (UnimplementedMsgServer) DeleteLoanState(context.Context, *MsgDeleteLoanState) (*MsgDeleteLoanStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLoanState not implemented")
}
func (UnimplementedMsgServer) CreateCreditCardMetadata(context.Context, *MsgCreateCreditCardMetadata) (*MsgCreateCreditCardMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCreditCardMetadata not implemented")
}
func (UnimplementedMsgServer) UpdateCreditCardMetadata(context.Context, *MsgUpdateCreditCardMetadata) (*MsgUpdateCreditCardMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCreditCardMetadata not implemented")
}
func (UnimplementedMsgServer) DeleteCreditCardMetadata(context.Context, *MsgDeleteCreditCardMetadata) (*MsgDeleteCreditCardMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCreditCardMetadata not implemented")
}
func (UnimplementedMsgServer) CreateMcaMetadata(context.Context, *MsgCreateMcaMetadata) (*MsgCreateMcaMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMcaMetadata not implemented")
}
func (UnimplementedMsgServer) UpdateMcaMetadata(context.Context, *MsgUpdateMcaMetadata) (*MsgUpdateMcaMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMcaMetadata not implemented")
}
func (UnimplementedMsgServer) DeleteMcaMetadata(context.Context, *MsgDeleteMcaMetadata) (*MsgDeleteMcaMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMcaMetadata not implemented")
}
func (UnimplementedMsgServer) CreateInstallmentMetadata(context.Context, *MsgCreateInstallmentMetadata) (*MsgCreateInstallmentMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateInstallmentMetadata not implemented")
}
func (UnimplementedMsgServer) UpdateInstallmentMetadata(context.Context, *MsgUpdateInstallmentMetadata) (*MsgUpdateInstallmentMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInstallmentMetadata not implemented")
}
func (UnimplementedMsgServer) DeleteInstallmentMetadata(context.Context, *MsgDeleteInstallmentMetadata) (*MsgDeleteInstallmentMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteInstallmentMetadata not implemented")
}
func (UnimplementedMsgServer) mustEmbedUnimplementedMsgServer() {}

// UnsafeMsgServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MsgServer will
// result in compilation errors.
type UnsafeMsgServer interface {
	mustEmbedUnimplementedMsgServer()
}

func RegisterMsgServer(s grpc.ServiceRegistrar, srv MsgServer) {
	s.RegisterService(&Msg_ServiceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Msg_UpdateParams_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateLoan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateLoan)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateLoan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Msg_CreateLoan_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateLoan(ctx, req.(*MsgCreateLoan))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateLoanState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateLoanState)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateLoanState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Msg_CreateLoanState_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateLoanState(ctx, req.(*MsgCreateLoanState))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateLoanState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateLoanState)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateLoanState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Msg_UpdateLoanState_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateLoanState(ctx, req.(*MsgUpdateLoanState))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteLoanState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteLoanState)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteLoanState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Msg_DeleteLoanState_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteLoanState(ctx, req.(*MsgDeleteLoanState))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateCreditCardMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateCreditCardMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateCreditCardMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Msg_CreateCreditCardMetadata_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateCreditCardMetadata(ctx, req.(*MsgCreateCreditCardMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateCreditCardMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateCreditCardMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateCreditCardMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Msg_UpdateCreditCardMetadata_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateCreditCardMetadata(ctx, req.(*MsgUpdateCreditCardMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteCreditCardMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteCreditCardMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteCreditCardMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Msg_DeleteCreditCardMetadata_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteCreditCardMetadata(ctx, req.(*MsgDeleteCreditCardMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateMcaMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateMcaMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateMcaMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Msg_CreateMcaMetadata_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateMcaMetadata(ctx, req.(*MsgCreateMcaMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateMcaMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateMcaMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateMcaMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Msg_UpdateMcaMetadata_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateMcaMetadata(ctx, req.(*MsgUpdateMcaMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteMcaMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteMcaMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteMcaMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Msg_DeleteMcaMetadata_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteMcaMetadata(ctx, req.(*MsgDeleteMcaMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateInstallmentMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateInstallmentMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateInstallmentMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Msg_CreateInstallmentMetadata_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateInstallmentMetadata(ctx, req.(*MsgCreateInstallmentMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateInstallmentMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateInstallmentMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateInstallmentMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Msg_UpdateInstallmentMetadata_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateInstallmentMetadata(ctx, req.(*MsgUpdateInstallmentMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteInstallmentMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteInstallmentMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteInstallmentMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Msg_DeleteInstallmentMetadata_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteInstallmentMetadata(ctx, req.(*MsgDeleteInstallmentMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

// Msg_ServiceDesc is the grpc.ServiceDesc for Msg service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Msg_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ardaos.loan.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "CreateLoan",
			Handler:    _Msg_CreateLoan_Handler,
		},
		{
			MethodName: "CreateLoanState",
			Handler:    _Msg_CreateLoanState_Handler,
		},
		{
			MethodName: "UpdateLoanState",
			Handler:    _Msg_UpdateLoanState_Handler,
		},
		{
			MethodName: "DeleteLoanState",
			Handler:    _Msg_DeleteLoanState_Handler,
		},
		{
			MethodName: "CreateCreditCardMetadata",
			Handler:    _Msg_CreateCreditCardMetadata_Handler,
		},
		{
			MethodName: "UpdateCreditCardMetadata",
			Handler:    _Msg_UpdateCreditCardMetadata_Handler,
		},
		{
			MethodName: "DeleteCreditCardMetadata",
			Handler:    _Msg_DeleteCreditCardMetadata_Handler,
		},
		{
			MethodName: "CreateMcaMetadata",
			Handler:    _Msg_CreateMcaMetadata_Handler,
		},
		{
			MethodName: "UpdateMcaMetadata",
			Handler:    _Msg_UpdateMcaMetadata_Handler,
		},
		{
			MethodName: "DeleteMcaMetadata",
			Handler:    _Msg_DeleteMcaMetadata_Handler,
		},
		{
			MethodName: "CreateInstallmentMetadata",
			Handler:    _Msg_CreateInstallmentMetadata_Handler,
		},
		{
			MethodName: "UpdateInstallmentMetadata",
			Handler:    _Msg_UpdateInstallmentMetadata_Handler,
		},
		{
			MethodName: "DeleteInstallmentMetadata",
			Handler:    _Msg_DeleteInstallmentMetadata_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ardaos/loan/tx.proto",
}
